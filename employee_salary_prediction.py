# -*- coding: utf-8 -*-
"""Employee salary prediction.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Eh9QsJwcZirh79KY3j6M_fxh73Z5VtK-
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

from sklearn.preprocessing import LabelEncoder
from sklearn.ensemble import RandomForestRegressor
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_squared_error, r2_score

# Replace with your correct path if needed
# Replace with your correct path if needed
df = pd.read_csv("adult 3.csv")
df.head()

# Check missing values
print(df.isnull().sum())

# Drop rows with missing values
df.dropna(inplace=True)

le = LabelEncoder()
for column in df.columns:
    if df[column].dtype == 'object':
        df[column] = le.fit_transform(df[column])

X = df.drop('income', axis=1)
y = df['income']

print("Unique income labels (before):", y.unique())

print(df.columns)

# Simulate actual salaries based on original class (0/1)
np.random.seed(42)
y_real = np.where(
    y == 0,
    np.random.randint(25000, 50000, size=len(y)),
    np.random.randint(51000, 100000, size=len(y))
)

X_train, X_test, y_train, y_test = train_test_split(X, y_real, test_size=0.2, random_state=42)

model = RandomForestRegressor()
model.fit(X_train, y_train)

y_pred = model.predict(X_test)

print("âœ… Model trained successfully!")
print("Mean Squared Error:", mean_squared_error(y_test, y_pred))
print("RÂ² Score:", r2_score(y_test, y_pred))

# Replace values as per your column ranges
new_data = pd.DataFrame([[
    30, 4, 123456, 10, 12, 2, 7, 1, 3, 1, 0, 0, 40, 39
]], columns=X.columns)

predicted_salary = model.predict(new_data)[0]
print(f"ðŸ’° Predicted Salary: â‚¹{int(predicted_salary)}")

plt.figure(figsize=(8,5))
plt.scatter(y_test, y_pred, alpha=0.5)
plt.xlabel("Actual Salary")
plt.ylabel("Predicted Salary")
plt.title("Actual vs Predicted Salary")
plt.grid(True)
plt.show()